#服务名
spring.application.name=nrdp-manager
server.port=8003

#配置上下文路径
#server.servlet.context-path=/admin

#注册中心
eureka.client.serviceUrl.defaultZone=http://server1:8000/eureka/,http://server2:8001/eureka/

#为监控端点加前缀，这样才可以收集到监控信息
#eureka.instance.health-check-url-path=/admin/actuator/health
eureka.instance.health-check-url-path=/actuator/health
eureka.client.registry-fetch-interval-seconds=5

#Eureka中的metadataMap是专门用来存放一些自定义的数据，当注册中心或者其他服务需要此服务的某些配置时可以在metadataMap里取。
#实际上，每个instance都有各自的metadataMap，map中存放着需要用到的属性。
#例如，以下配置中的eureka.instance.metadata-map.user.name，当这个服务成功注册到Eureka上，
#SpringBootAdmin就会取拿到这个instance，进而拿到metadataMap里的属性，然后放入请求头，
#向此服务发送请求，访问此服务的actuator开放的端点。
eureka.instance.metadata-map.user.name=user
eureka.instance.metadata-map.user.password=password

# 表示设置属性变化后不使用密码验证
management.security.enabled=false
#暴露actuator的所有端点
management.endpoints.web.exposure.include=*
#health endpoint是否必须显示全部细节。默认情况下, /actuator/health 是公开的，并且不显示细节
management.endpoint.health.show-details=always

#使用了安全认证后需要配置登录名，密码和安全策略
#security.basic.enabled表示关掉security框架自带的登陆弹出框
#security.basic.enabled=false
spring.profiles.active=secure
spring.security.user.name=user
spring.security.user.password=password

#通过服务连接配置中心
spring.cloud.config.profile=dev
spring.cloud.config.discovery.enabled=true
spring.cloud.config.discovery.serviceId=config-server
#配置文件获取失败快速返回
spring.cloud.config.failFast=true

# 开启消息追踪,开启后,可以追踪所有此节点的RemoteApplicationEvent的各个子事件类型事件
#spring.cloud.bus.trace.enabled=true
#
#spring.cloud.stream.default-binder=rabbit
#spring。rabbitmq.host=spark03
#spring。rabbitmq.port=5672
#spring。rabbitmq.username=rabbitadmin
#spring。rabbitmq.password=123456